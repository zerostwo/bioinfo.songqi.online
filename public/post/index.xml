<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Songqi</title>
    <link>/post/</link>
    <description>Recent content in Posts on Songqi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R Markdown的使用技巧</title>
      <link>/2020/04/17/r_markdown/</link>
      <pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/04/17/r_markdown/</guid>
      <description>1 图片居中 2 图注 3 数学公式 4 并排放两张图 5 交互式图表 R markdown通过R代码创建交互式报告。这篇文章提供了一些我每天用来改善输出文档外观</description>
    </item>
    
    <item>
      <title>PCA绘图</title>
      <link>/2020/04/16/pca/</link>
      <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/04/16/pca/</guid>
      <description>使用R语言进行PCA绘图1 构建绘图数据 data.matrix &amp;lt;- matrix(nrow=100, ncol=10) colnames(data.matrix) &amp;lt;- c( paste(&amp;quot;wt&amp;quot;, 1:5, sep=&amp;quot;&amp;quot;), paste(&amp;quot;ko&amp;quot;, 1:5, sep=&amp;quot;&amp;quot;) ) rownames(data.matrix) &amp;lt;- c( paste(&amp;quot;gene&amp;quot;, 1:100, sep=&amp;quot;&amp;quot;) ) for (i in 1:100) { wt.values &amp;lt;- rpois(5, lambda=sample(x=10:1000, size=1)) ko.values &amp;lt;- rpois(5, lambda=sample(x=10:1000, size=1)) data.matrix[i,] &amp;lt;- c(wt.values, ko.values) } procomp默认样</description>
    </item>
    
    <item>
      <title>生物信息学环境配置</title>
      <link>/2020/04/15/bioinfo_config/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/04/15/bioinfo_config/</guid>
      <description>1 终端美化（Oh My Zsh） 1.1 安装 Zsh 1.2 安装 Oh My Zsh 1.3 插件配置 1.4 .zshrc配置 2 R及Rstudio的安装 2.1 R安装 2.2 安装Rstudio 3 conda</description>
    </item>
    
  </channel>
</rss>